# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  #pull_request:
    #branches: [ "main" ]

permissions:
  contents: write

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with: 
        ref: "main"

    - name: Install libboost
      run: |
        sudo apt-get install libboost-all-dev
        
    # - name: Install Protobuf
    #   run: |
      #   mkdir pb
      #   cd pb
      #   pwd
      #   wget https://github.com/protocolbuffers/protobuf/releases/download/v3.20.3/protoc-3.20.3-linux-x86_64.zip
      #   unzip ./protoc*
      #   sudo mv bin/protoc /usr/bin/
      #   sudo mv ./include/* /usr/include/
      #   sudo ldconfig
      #   cd ..
      #   protoc --version
    - name: Install Protobuf
      run: |
        git clone -b v3.20.3 https://github.com/protocolbuffers/protobuf.git
        cd protobuf
        git submodule update --init --recursive
        ./autogen.sh
        ./configure
        make -j2
        sudo make install
        sudo ldconfig
        protoc --version
    #- name: Install Protoc
      #uses: arduino/setup-protoc@v2
      #with:
      #  version: "3.20.x"
      #  repo-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Install Muduo
      run: |
        mkdir temp
        cd temp
        git clone --depth=1 https://github.com/chenshuo/muduo
        cd muduo
        pwd
        sudo ./build.sh install
        cd ../build/release*/include
        sudo mv muduo/ /usr/include/
        cd ../lib/
        sudo mv * /usr/lib/
        sudo ldconfig
        find /usr/include/muduo

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Zip the Build
      working-directory: ${{github.workspace}}/
      run: zip -r ${{secrets.ReleaseZipName}} ./* -x='protobuf/*' -x='muduo/*' -x='build/*' -x='temp/*'
      
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "0.0.1"
          prerelease: true
          title: "Test Build"
          files: ${{github.workspace}}/${{secrets.ReleaseZipName}}.zip

